<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tina.dao.UserinfoMapper">
	<resultMap id="BaseResultMap" type="com.tina.entity.Userinfo">
		<id column="userId" jdbcType="INTEGER" property="userId" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="roleId" jdbcType="INTEGER" property="roleId" />
		<result column="borndate" jdbcType="DATE" property="borndate" />
		<result column="realname" jdbcType="VARCHAR" property="realname" />
		<result column="email" jdbcType="VARCHAR" property="email" />
	</resultMap>

	<resultMap type="com.tina.entity.UserinfoContainRoleinfo" id="AdvancedResultMap">
		<id column="userId" jdbcType="INTEGER" property="userId" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="roleId" jdbcType="INTEGER" property="roleId" />
		<result column="borndate" jdbcType="DATE" property="borndate" />
		<result column="realname" jdbcType="VARCHAR" property="realname" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<association property="roleinfo" javaType="com.tina.entity.Roleinfo">
			<result column="roleId" property="roleId" />
			<result column="roleName" property="roleName" />
			<result column="roleDesc" property="roleDesc" />
		</association>
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		userId, username, password, roleId, borndate, realname, email
	</sql>
	<select id="selectByExample" parameterType="com.tina.entity.UserinfoExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from userinfo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from userinfo
		where userId = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="Integer">
		delete from userinfo
		where userId = #{userId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.tina.entity.UserinfoExample">
		delete from userinfo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.tina.entity.Userinfo">
		<selectKey keyProperty="userId" order="AFTER" resultType="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into userinfo (username, password, roleId,
		borndate, realname, email
		)
		values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER},
		#{borndate,jdbcType=DATE}, #{realname,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.tina.entity.Userinfo">
		<selectKey keyProperty="userId" order="AFTER" resultType="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into userinfo
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="roleId != null">
				roleId,
			</if>
			<if test="borndate != null">
				borndate,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="email != null">
				email,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="borndate != null">
				#{borndate,jdbcType=DATE},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.tina.entity.UserinfoExample" resultType="java.lang.Long">
		select count(*) from userinfo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update userinfo
		<set>
			<if test="record.userId != null">
				userId = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.roleId != null">
				roleId = #{record.roleId,jdbcType=INTEGER},
			</if>
			<if test="record.borndate != null">
				borndate = #{record.borndate,jdbcType=DATE},
			</if>
			<if test="record.realname != null">
				realname = #{record.realname,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update userinfo
		set userId = #{record.userId,jdbcType=INTEGER},
		username = #{record.username,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		roleId = #{record.roleId,jdbcType=INTEGER},
		borndate =
		#{record.borndate,jdbcType=DATE},
		realname = #{record.realname,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.tina.entity.Userinfo">
		update userinfo
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				roleId = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="borndate != null">
				borndate = #{borndate,jdbcType=DATE},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
		</set>
		where userId = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tina.entity.Userinfo">
		update userinfo
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		roleId = #{roleId,jdbcType=INTEGER},
		borndate = #{borndate,jdbcType=DATE},
		realname =
		#{realname,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR}
		where userId = #{userId,jdbcType=INTEGER}
	</update>
	<select id="selectUserinfosByPage" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM userinfo
		<where>
			<if test="key != null and key != ''">
				AND (username LIKE '%${key}%' OR realname LIKE '%${key}%')
			</if>
		</where>
		ORDER BY userId ASC LIMIT #{start}, #{length}
	</select>
	<select id="selectByUsername" parameterType="string" resultMap="BaseResultMap">
		SELECT * FROM userinfo WHERE username = #{_parameter}
	</select>
	<select id="selectUserinfoByDoubleKey" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM userinfo
		WHERE (username = #{username} AND password = #{password}) OR (email = #{username} AND password = #{password})
	</select>
	<select id="selectUsernameByEmail" parameterType="string" resultType="string">
		SELECT username FROM userinfo
		WHERE email = #{_parameter}
	</select>
	<select id="selectCountUserinfo" resultType="int">
		SELECT COUNT(userId) FROM userinfo
	</select>
	<select id="selectUserinfoContainRoleinfo" parameterType="map" resultMap="AdvancedResultMap">
		SELECT userinfo.*, roleinfo.roleName FROM roleinfo INNER JOIN userinfo ON userinfo.roleId = roleinfo.roleId
		<where>
			<if test="roleId != null and roleId != 0">
				AND userinfo.roleId = #{roleId}
			</if>
			<if test="key != null and key != ''">
				AND (username LIKE '%${key}%' OR realname LIKE '%${key}%')
			</if>
		</where>
		ORDER BY userId ASC LIMIT #{start}, #{length}
	</select>
	<delete id="deleteBatch" parameterType="list">
		DELETE FROM userinfo WHERE userId IN
		<foreach collection="list" item="item" separator=", " open="(" close=")" index="index">
			#{item}
		</foreach>
	</delete>
	<select id="selectUsersByRoleId" parameterType="int" resultType="int">
		SELECT COUNT(userId) FROM userinfo WHERE roleId = #{_parameter}
	</select>
</mapper>