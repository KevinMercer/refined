<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tina.dao.RolePermissionMapper">
	<resultMap id="BaseResultMap" type="com.tina.entity.RolePermissionKey">
		<id column="roleId" jdbcType="INTEGER" property="roleId" />
		<id column="perid" jdbcType="INTEGER" property="perid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		roleId, perid
	</sql>
	<select id="selectByExample" parameterType="com.tina.entity.RolePermissionExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from rolepermission
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.tina.entity.RolePermissionKey">
		delete from rolepermission
		where roleId = #{roleId,jdbcType=INTEGER}
		and perid = #{perid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.tina.entity.RolePermissionExample">
		delete from rolepermission
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.tina.entity.RolePermissionKey">
		insert into rolepermission (roleId, perid)
		values (#{roleId,jdbcType=INTEGER}, #{perid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.tina.entity.RolePermissionKey">
		insert into rolepermission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				roleId,
			</if>
			<if test="perid != null">
				perid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="perid != null">
				#{perid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.tina.entity.RolePermissionExample" resultType="java.lang.Long">
		select count(*) from rolepermission
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update rolepermission
		<set>
			<if test="record.roleId != null">
				roleId = #{record.roleId,jdbcType=INTEGER},
			</if>
			<if test="record.perid != null">
				perid = #{record.perid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update rolepermission
		set roleId = #{record.roleId,jdbcType=INTEGER},
		perid = #{record.perid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<delete id="deleteByRoleId" parameterType="int">
		DELETE FROM rolepermission
		WHERE roleId = #{_parameter}
	</delete>
	<select id="selectPeridByRoleId" parameterType="int" resultType="int">
		SELECT perid FROM rolepermission WHERE roleId = #{_parameter}
	</select>
</mapper>